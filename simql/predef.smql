define {
  defun is_null(lhs: Expr) => Expr {
    q{ $`? IS NULL`($lhs) }
  }
  defun is_not_null(lhs: Expr) => Expr {
    q{ $`? IS NOT NULL`($lhs) }
  }
  defun table_access(col: Symbol, index: Number) => Symbol {
    let tbl = $ctx_get_table($index)
    let accessor = $concat_symbol($tbl, $single_dot)
    $concat_symbol($accessor, $col)
  }
  defun c(col: Expr) => Raw {
    q{ $`COUNT(?)`($col) }
  }
  defun like(col: Symbol, keyword: String) => Expr {
    let lk = $concat_string($keyword, "%")
    let lk = $concat_string("%", $lk)
    q{ $`? LIKE(?)`($col, $keyword) }
  }
}
